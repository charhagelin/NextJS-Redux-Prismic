{"version":3,"file":"static/webpack/static\\development\\pages\\posts.js.4715b587edb6cbcceca2.hot-update.js","sources":["webpack:///./components/PostsList.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, RichText, Date } from \"prismic-reactjs\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchAllPrismic } from \"../actions/prismicAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PostsList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllPrismic();\r\n  }\r\n\r\n  renderPosts() {\r\n    if (!this.props.data.length) return <p>Loading...</p>;\r\n    const posts = this.props.data.filter(post => {\r\n      return post.type === \"post\";\r\n    });\r\n    return Object.keys(posts).map(key => {\r\n      const postId = posts[key].id;\r\n      const post = posts[key].data;\r\n      console.log(\"postID:\", postId);\r\n      return (\r\n        <ul key={postId}>\r\n          <li>{RichText.asText(post.title)}</li>\r\n          <li>{RichText.asText(post.description)}</li>\r\n          <img alt=\"cover\" src={post.image.url} />\r\n        </ul>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>header</p>\r\n        {this.renderPosts()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.data\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ fetchAllPrismic }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostsList);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9BA;AACA;AAgCA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}